#include <iframe>
#include <math>
#include <cmp>
#include <pii>

@cgmain

@m int[200000] a, b, p;
pii[200000] proj;
int n;

ll[200000] dp;
bool[200000] cal;

fn best(int l) -> ll:
    if(l >= n) return 0 end

    if(cal[l]) return dp[l] end

    ll res = 0;

    int i;
    for(i=l; i!=n&&proj[i].a==proj[l].a; ++i)
        @m int d=l+1, u=n-1;
        while(d<u)
            int m = (d+u)/2;
            if(proj[m].a <= b[proj[i].b])
                d = m+1
            else u = m end
        end
        if(proj[d].a <= b[proj[i].b]) ++d end
        res = @max(res, p[proj[i].b]+best(d));
    end

    res = @max(res, best(i));

    dp[l] = res; cal[l] = 1;

    return res;
end

fn pub main -> int:
    @poll n;

    for(i=0; i!=n; ++i)
        @poll a[i] b[i] p[i];
        proj[i].a = a[i];
        proj[i].b = i;
    end

    @sort proj n;

    @fmt best(0);
end
