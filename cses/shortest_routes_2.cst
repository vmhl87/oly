#include <iframe>
#include <heap>
#include <vec>
#include <pii>

@cgmain

@vec[pii][500] adj;
ll[500*500] ans;

fn inline get(int x, int y) -> ll: return ans[x*500+y] end
fn inline set(int x, int y, ll v): ans[x*500+y] = v end

fn inline main:
    @m int n, m, o; @poll n m o;
    while(m--)
        @m int a, b, c; @poll a b c;
        adj[a-1]:push(mpii(b-1, c));
        adj[b-1]:push(mpii(a-1, c));
    end

    for(i=0; i!=n; ++i)
        @heap[pll] q;
        q:push(mpll(1, i));
        while(q.sz)
            ll cost = q:top().a;
            int x = q:top().b;
            q:pop();
            if(get(i, x)) continue end
            set(i, x, cost);
            for(j=0; j!=adj[x].sz; ++j) if(!get(i, adj[x].d[j].a))
                q:push(mpll(cost+adj[x].d[j].b, adj[x].d[j].a))
            end end
        end
    end

    while(o--)
        @m int a, b; @poll a b;
        @fmt get(a-1, b-1)-1
    end
end
